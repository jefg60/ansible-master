# -*- mode: ruby -*-
# vim: ft=ruby

# ---- Vagrant configuration ----

Vagrant.configure(2) do |config|
  # ---- Configuration variables ----

  # Network configuration
  NETWORK ||= "192.168.52."
  NETMASK ||= "255.255.255.0"

  HOST12 ||= 'ansible-master-vagrant-client'
  HOST13 ||= 'ansible-master-vagrant-server'

  # Default Virtualbox .box
  BOX ||= "ubuntu/bionic64"

  HOSTS ||= {
     "#{HOST12}" => [512, BOX, 12 ],
     "#{HOST13}" => [768, BOX, 13 ]
  }

  GALAXY_CMD = "ansible-galaxy install -p ./roles/ \
                git+https://github.com/jefg60/ansible-orchestration-linux.git \
                git+https://github.com/jefg60/ansible-role-ara.git,master"
  system( GALAXY_CMD )

  HOSTS.each do | (name, cfg) |
    ram, box, number, ipaddr = cfg

    config.vm.define name do |machine|
      machine.vm.box = box
      machine.vm.provider "virtualbox" do |vbox|
        vbox.memory = ram
      end #Virtualbox specific options

      machine.vm.provider "google" do |google, override|
        google.google_project_id = "seismic-sentry-128516"
        google.google_json_key_location = "~/.seismic-sentry-128516-1edc267169b0.json"
        google.image_family = 'ubuntu-1804-lts'
        google.zone = 'us-east1-b'
        google.use_private_ip = false
        google.zone_config 'us-east1-b' do |zone1b|
          zone1b.name = name
          zone1b.machine_type = 'f1-micro'
          zone1b.zone = 'us-east1-b'
        end
        override.ssh.username = "ci_api"
        override.ssh.private_key_path = "~/.ssh/id_rsa"
        override.ssh.insert_key = true
        override.ssh.port = 22
        override.vm.box = "google/gce"
      end #Google specific options

      machine.vm.hostname = name 
      machine.vm.network "forwarded_port",
        guest: 22, host: "223#{number}", id: "ssh"
      machine.vm.network "private_network",
        ip: NETWORK+"#{number}"
      machine.ssh.port = "223#{number}"
      machine.ssh.insert_key = false
      # generate hosts file
      machine.vm.provision :shell, :path => "hostsfile.sh", :args => NETWORK
      # apt-cache
      machine.vm.provision :shell, :inline => "cp /vagrant/proxy /etc/apt/apt.conf.d/proxy"

      if number == 13 # only run the following against ansible-master vm
        machine.vm.provider "virtualbox" do |vbox|
          vbox.cpus = 2
        end #config.vm.define
        machine.vm.network "forwarded_port", guest: 8443, host: 8443, id: "apache443"
        # ensure that ./roles/ansible-orchestration-linux is there

        # run the ansible-master playbook
        machine.vm.provision "ansible" do |ansible|
          ansible.limit = "all"
          ansible.playbook = "ansible-master-test.yaml"
          ansible.raw_arguments = ['-v']
          ansible.inventory_path = "./inventory"
          # change ansible.tags for faster testing
          ansible.tags = 'all'
          ansible.extra_vars = {
            ansible_ssh_user: 'vagrant',
            link_ansible_cfg: true,
            ansible_python_interpreter: '/usr/bin/python3',
            master_ansible_user_ssh_phrase: '1234567890abc321',
            master_ansible_user_vaultfile: '/srv/anmad/test/testvault',
            anmad_inventories: '/vagrant/inventory-internal',
            anmad_playbooks: [
              'deploy.yaml',
              'deploy2.yaml'],
            anmad_prerun: 'deploy.yaml',
            anmad_debug: 'True',
            anmad_ara_url: 'https://ansible-master-ara:8443/',
            syntax_check_dir: '/srv/configmanagement/ansible'
          }
        end # machine.vm.provision ansible run

        # tests start here
        machine.vm.provision "shell" do |s|
          s.inline = "/vagrant/run_all_tests.sh"
          # don't color output green because its confusing when its a fail
          s.keep_color = true
          s.privileged = false
        end
        
      end # if number

    end # config.vm.define

  end # HOSTS-each

end # Vagrant.configure
