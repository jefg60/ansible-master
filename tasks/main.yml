---
- name: install packages, set up git
  include: "{{ include_item }}"
  with_items:
    - packages.yaml
    - ansible-user.yaml
    - git.yaml
    - ssl.yaml
    - anmad.yaml
  loop_control:
    loop_var: include_item

- name: create /var/log/ansible
  file:
    path: /var/log/ansible
    state: directory
    owner: "{{ ansible_orchestration_user }}"
    group: git
    mode: 0755

- name: create roles dir
  file:
    name: /etc/ansible/roles
    owner: "{{ ansible_orchestration_user }}"
    state: directory
    mode: 0755

- name: symlink /etc/ara/ara.cfg as /etc/ansible/ansible.cfg
  file:
    src: /etc/ara/ara.cfg
    dest: /etc/ansible/ansible.cfg
    state: link
    force: true
  when: link_ansible_cfg

- name: flush handlers before doing tests
  meta: flush_handlers

- name: wait for ara service port
  wait_for:
    port: "{{ ara.config.port }}"
    host: "{{ ara.config.host }}"
  when: ara.deployment.server == 'embedded'

- name: TEST ara homepage is up - external http server
  uri:
    url: "http://{{ ara.config.host }}/about/"
    return_content: yes
  register: ara_aboutpage
  when: ara.deployment.server != 'embedded'
  failed_when: "'ARA Records Ansible' not in ara_aboutpage.content"

- name: debug ara_aboutpage var
  debug:
    var: ara_aboutpage
    verbosity: 1

- name: TEST ara homepage is up - embdedded server
  uri:
    url: "http://{{ ara.config.host }}:{{ ara.config.port }}/about/"
    return_content: yes
  register: ara_aboutpage
  when: ara.deployment.server == 'embedded'
  failed_when: "'ARA Records Ansible' not in ara_aboutpage.content"

- name: debug ara_aboutpage var
  debug:
    var: ara_aboutpage
    verbosity: 1

- name: TEST anmad homepage is up - external https server
  uri:
    url: "https://{{ anmad_host }}/"
    user: "{{ anmad_control_username }}"
    password: "{{ anmad_control_password }}"
    validate_certs: false
    return_content: yes
  register: anmad_page
  failed_when: "'run ALL listed playbooks' not in anmad_page.content"
