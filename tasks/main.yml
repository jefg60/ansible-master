---
- name: install packages, set up git
  include: "{{ include_item }}"
  with_items:
    - packages.yaml
    - ansible-user.yaml
    - git.yaml
  loop_control:
    loop_var: include_item

- name: create /var/log/ansible
  file:
    path: /var/log/ansible
    state: directory
    owner: "{{ ansible_orchestration_user }}"
    group: git
    mode: 0755

- name: create roles dir
  file:
    name: /etc/ansible/roles
    owner: "{{ ansible_orchestration_user }}"
    state: directory
    mode: 0755

- name: git checkout ansible-logpoll
  git:
    repo: https://github.com/jefg60/ansible-logpoll.git
    dest: /srv/ansible-logpoll
    clone: yes
    version: dev
  tags: logpoll

- name: deploy ssh-askpass script
  template:
    src: ssh-askpass.j2
    dest: /usr/bin/ssh-askpass
    owner: root
    group: root
    mode: 0755
  when: master_ansible_user_vaultfile is defined
  tags: logpoll

- name: create logpoll conf dir
  file:
    path: /etc/ansible-logpoll/conf.d/
    state: directory
    mode: 0755
    owner: root
    group: root
  tags: logpoll

- name: deploy ansible-logpoll config file
  template:
    src: ansible-logpoll-conf.j2
    dest: /etc/ansible-logpoll/conf.d/main.conf
    mode: 0755
    owner: root
    group: root
  tags: logpoll
  notify:
    - restart ansible-logpoll

- name: deploy ansible-logpoll rsyslog conf
  copy:
    src: 60-ansible-logpoll.conf
    dest: /etc/rsyslog.d/
    mode: 0644
    owner: root
    group: root
  tags: logpoll
  notify:
    - restart rsyslog

- name: deploy ansible-logpoll.service
  copy:
    src: ansible-logpoll.service
    dest: /etc/systemd/system/
    mode: 0644
    owner: root
    group: root
  tags: logpoll
  notify:
    - systemctl daemon-reload
    - restart ansible-logpoll

- name: symlink /etc/ara/ara.cfg as /etc/ansible/ansible.cfg
  file:
    src: /etc/ara/ara.cfg
    dest: /etc/ansible/ansible.cfg
    state: link
    force: true
  when: link_ansible_cfg

- name: flush handlers before doing tests
  meta: flush_handlers

- name: wait for ara service port
  wait_for:
    port: "{{ ara.config.port }}"
    host: "{{ ara.config.host }}"
  when: ara.deployment.server == 'embedded'

- name: TEST ara homepage is up - external http server
  uri:
    url: "http://{{ ara.config.host }}/about/"
    return_content: yes
  register: ara_aboutpage
  when: ara.deployment.server != 'embedded'
  failed_when: "'ARA Records Ansible' not in ara_aboutpage.content"

- name: debug ara_aboutpage var
  debug:
    var: ara_aboutpage
    verbosity: 1

- name: TEST ara homepage is up - embdedded server
  uri:
    url: "http://{{ ara.config.host }}:{{ ara.config.port }}/about/"
    return_content: yes
  register: ara_aboutpage
  when: ara.deployment.server == 'embedded'
  failed_when: "'ARA Records Ansible' not in ara_aboutpage.content"

- name: debug ara_aboutpage var
  debug:
    var: ara_aboutpage
    verbosity: 1
