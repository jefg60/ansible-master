---
- name: create git user
  user:
    name: "{{ ansible_master.git.username }}"
    shell: /usr/bin/git-shell
    home: "{{ ansible_master.git.homedir }}"
    password: "*"

- name: create git-shell-commands directory
  file:
    path: "{{ ansible_master.git.homedir }}/git-shell-commands"
    state: directory
    owner: "{{ ansible_master.git.username }}"
    group: git
    mode: 0700

- name: create git-shell no-interactive-login
  copy:
    src: "no-interactive-login"
    dest: "{{ ansible_master.git.homedir }}/git-shell-commands/no-interactive-login"
    owner: "{{ ansible_master.git.username }}"
    group: git
    mode: 0700

- name: deploy github key to git user if github_username is defined
  authorized_key:
    user: "{{ ansible_master.git.username }}"
    state: present
    key: "https://github.com/{{ github_username }}.keys"
  when: github_username is defined

- name: create git repo
  command: "git init --bare {{ ansible_master.git.homedir }}/{{ ansible_master.git.repo_name }}.git"
  args:
    creates: "{{ ansible_master.git.homedir }}/{{ ansible_master.git.repo_name }}.git/HEAD"
  become: yes
  become_user: "{{ ansible_master.git.username }}"

- name: create run dir
  file:
    path: "{{ ansible_master.git.repo_target }}"
    state: directory
    owner: "{{ ansible_master.git.username }}"
    group: "{{ ansible_master.group }}"
    mode: u=rwX,g=rwX,o=rX
    recurse: no

# ignore_errors required because git errors when repo is empty
- name: clone local git repo to run dir
  git:
    repo: "{{ ansible_master.git.homedir }}/{{ ansible_master.git.repo_name }}.git"
    dest: "{{ ansible_master.git.repo_target }}"
    update: no
  ignore_errors: true
  become: yes
  become_user: "{{ ansible_master.git.username }}"
  when: not ansible_master.git.remote_repo

- name: clone remote git repo to run dir
  git:
    repo: "{{ ansible_master.git.remote_repo }}"
    dest: "{{ ansible_master.git.repo_target }}"
    key_file: "{{ ansible_master.git.remote_deploykey }}"
    update: no
  become: yes
  become_user: "{{ ansible_master.git.username }}"
  when: ansible_master.git.remote_repo

- name: deploy post-update-hooks script
  template:
    src: "post-update-hooks.j2"
    dest: "{{ ansible_master.git.homedir }}/{{ ansible_master.git.repo_name }}.post-update-hooks.sh"
    group: git
    mode: 0750
  no_log: true

- name: post-update git hook config
  template:
    src: "post-update.j2"
    dest: "{{ ansible_master.git.homedir }}/{{ ansible_master.git.repo_name }}.git/hooks/post-update"
    mode: 0755

- name: ansible_master.git.log_dir creation
  file:
    path: "{{ ansible_master.git.log_dir }}"
    state: directory
    owner: "{{ ansible_master.git.username }}"
    mode: u=rwX,g=rwX,o=rX
    recurse: yes
